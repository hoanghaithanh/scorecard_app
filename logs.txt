* 
* ==> Audit <==
* |----------------|-----------------------|----------|------|---------|---------------------|---------------------|
|    Command     |         Args          | Profile  | User | Version |     Start Time      |      End Time       |
|----------------|-----------------------|----------|------|---------|---------------------|---------------------|
| service        | grafana-ext           | minikube | root | v1.32.0 | 23 Feb 24 18:15 EST |                     |
| start          |                       | minikube | root | v1.32.0 | 23 Feb 24 18:15 EST |                     |
| start          | --force               | minikube | root | v1.32.0 | 23 Feb 24 18:16 EST |                     |
| service        | grafana-ext           | minikube | root | v1.32.0 | 23 Feb 24 18:17 EST |                     |
| service        | prometheus-server-ext | minikube | root | v1.32.0 | 23 Feb 24 19:34 EST |                     |
| start          |                       | minikube | root | v1.32.0 | 23 Feb 24 19:35 EST |                     |
| start          | --force               | minikube | root | v1.32.0 | 23 Feb 24 19:35 EST |                     |
| service        | prometheus-server-ext | minikube | root | v1.32.0 | 23 Feb 24 19:36 EST |                     |
| service        | prometheus-server-ext | minikube | root | v1.32.0 | 23 Feb 24 19:37 EST |                     |
| start          | --force               | minikube | root | v1.32.0 | 23 Feb 24 19:37 EST |                     |
| update-context |                       | minikube | root | v1.32.0 | 23 Feb 24 19:39 EST | 23 Feb 24 19:39 EST |
| service        | prometheus-server-ext | minikube | root | v1.32.0 | 23 Feb 24 19:39 EST |                     |
| start          | --force               | minikube | root | v1.32.0 | 23 Feb 24 19:39 EST |                     |
|----------------|-----------------------|----------|------|---------|---------------------|---------------------|

* 
* ==> Last Start <==
* Log file created at: 2024/02/23 19:39:35
Running on machine: ThanhPC
Binary: Built with gc go1.21.3 for linux/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0223 19:39:35.111471    5279 out.go:296] Setting OutFile to fd 1 ...
I0223 19:39:35.111567    5279 out.go:348] isatty.IsTerminal(1) = true
I0223 19:39:35.111569    5279 out.go:309] Setting ErrFile to fd 2...
I0223 19:39:35.111571    5279 out.go:348] isatty.IsTerminal(2) = true
I0223 19:39:35.111653    5279 root.go:338] Updating PATH: /root/.minikube/bin
W0223 19:39:35.111707    5279 root.go:314] Error reading config file at /root/.minikube/config/config.json: open /root/.minikube/config/config.json: no such file or directory
I0223 19:39:35.111799    5279 out.go:303] Setting JSON to false
I0223 19:39:35.112297    5279 start.go:128] hostinfo: {"hostname":"ThanhPC","uptime":27951,"bootTime":1708707224,"procs":13,"os":"linux","platform":"amazon","platformFamily":"rhel","platformVersion":"2","kernelVersion":"5.15.133.1-microsoft-standard-WSL2","kernelArch":"x86_64","virtualizationSystem":"","virtualizationRole":"guest","hostId":"9345adcc-6350-46e3-ae1b-c6fd2dee554b"}
I0223 19:39:35.112451    5279 start.go:138] virtualization:  guest
I0223 19:39:35.113847    5279 out.go:177] 😄  minikube v1.32.0 on Amazon 2 (amd64)
W0223 19:39:35.115306    5279 out.go:239] ❗  minikube skips various validations when --force is supplied; this may lead to unexpected behavior
I0223 19:39:35.115344    5279 notify.go:220] Checking for updates...
I0223 19:39:35.115552    5279 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.28.3
I0223 19:39:35.115598    5279 driver.go:378] Setting default libvirt URI to qemu:///system
I0223 19:39:35.256330    5279 docker.go:122] docker version: linux-24.0.6:Docker Desktop
I0223 19:39:35.256377    5279 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0223 19:39:35.330434    5279 info.go:266] docker info: {ID:800c0d7f-d07a-4914-a46a-48c85d8f45fb Containers:30 ContainersRunning:30 ContainersPaused:0 ContainersStopped:0 Images:18 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:262 OomKillDisable:true NGoroutines:242 SystemTime:2024-02-24 00:39:35.322161977 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:13 KernelVersion:5.15.133.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:10 MemTotal:25205207040 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:ThanhPC Labels:[] ExperimentalBuild:false ServerVersion:24.0.6 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:8165feabfdfe38c65b599c4993d227328c231fca Expected:8165feabfdfe38c65b599c4993d227328c231fca} RuncCommit:{ID:v1.1.8-0-g82f18fe Expected:v1.1.8-0-g82f18fe} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/local/lib/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.11.2-desktop.5] map[Name:compose Path:/usr/local/lib/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.23.0-desktop.1] map[Name:dev Path:/usr/local/lib/docker/cli-plugins/docker-dev SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:/usr/local/lib/docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.20] map[Name:init Path:/usr/local/lib/docker/cli-plugins/docker-init SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v0.1.0-beta.9] map[Name:sbom Path:/usr/local/lib/docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:/usr/local/lib/docker/cli-plugins/docker-scan SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.26.0] map[Name:scout Path:/usr/local/lib/docker/cli-plugins/docker-scout SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.0.9]] Warnings:<nil>}}
I0223 19:39:35.330497    5279 docker.go:295] overlay module found
I0223 19:39:35.331722    5279 out.go:177] ✨  Using the docker driver based on existing profile
I0223 19:39:35.332609    5279 start.go:298] selected driver: docker
I0223 19:39:35.332616    5279 start.go:902] validating driver "docker" against &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:6000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/root:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0223 19:39:35.332665    5279 start.go:913] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
W0223 19:39:35.332711    5279 out.go:239] 🛑  The "docker" driver should not be used with root privileges. If you wish to continue as root, use --force.
W0223 19:39:35.332735    5279 out.go:239] 💡  If you are running minikube within a VM, consider using --driver=none:
W0223 19:39:35.332784    5279 out.go:239] 📘    https://minikube.sigs.k8s.io/docs/reference/drivers/none/
I0223 19:39:35.332876    5279 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.28.3
W0223 19:39:35.332893    5279 out.go:239] 💡  Tip: To remove this root owned cluster, run: sudo minikube delete
I0223 19:39:35.332946    5279 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0223 19:39:35.408198    5279 info.go:266] docker info: {ID:800c0d7f-d07a-4914-a46a-48c85d8f45fb Containers:30 ContainersRunning:30 ContainersPaused:0 ContainersStopped:0 Images:18 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:262 OomKillDisable:true NGoroutines:242 SystemTime:2024-02-24 00:39:35.400182867 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:13 KernelVersion:5.15.133.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:10 MemTotal:25205207040 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:ThanhPC Labels:[] ExperimentalBuild:false ServerVersion:24.0.6 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:8165feabfdfe38c65b599c4993d227328c231fca Expected:8165feabfdfe38c65b599c4993d227328c231fca} RuncCommit:{ID:v1.1.8-0-g82f18fe Expected:v1.1.8-0-g82f18fe} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/local/lib/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.11.2-desktop.5] map[Name:compose Path:/usr/local/lib/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.23.0-desktop.1] map[Name:dev Path:/usr/local/lib/docker/cli-plugins/docker-dev SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:/usr/local/lib/docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.20] map[Name:init Path:/usr/local/lib/docker/cli-plugins/docker-init SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v0.1.0-beta.9] map[Name:sbom Path:/usr/local/lib/docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:/usr/local/lib/docker/cli-plugins/docker-scan SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.26.0] map[Name:scout Path:/usr/local/lib/docker/cli-plugins/docker-scout SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.0.9]] Warnings:<nil>}}
I0223 19:39:35.408596    5279 cni.go:84] Creating CNI manager for ""
I0223 19:39:35.408604    5279 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0223 19:39:35.408609    5279 start_flags.go:323] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:6000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/root:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0223 19:39:35.411349    5279 out.go:177] 👍  Starting control plane node minikube in cluster minikube
I0223 19:39:35.412227    5279 cache.go:121] Beginning downloading kic base image for docker with docker
I0223 19:39:35.412983    5279 out.go:177] 🚜  Pulling base image ...
I0223 19:39:35.413763    5279 preload.go:132] Checking if preload exists for k8s version v1.28.3 and runtime docker
I0223 19:39:35.413787    5279 preload.go:148] Found local preload: /root/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.28.3-docker-overlay2-amd64.tar.lz4
I0223 19:39:35.413790    5279 cache.go:56] Caching tarball of preloaded images
I0223 19:39:35.413823    5279 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 in local docker daemon
I0223 19:39:35.413835    5279 preload.go:174] Found /root/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.28.3-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0223 19:39:35.413839    5279 cache.go:59] Finished verifying existence of preloaded tar for  v1.28.3 on docker
I0223 19:39:35.413884    5279 profile.go:148] Saving config to /root/.minikube/profiles/minikube/config.json ...
I0223 19:39:35.457833    5279 image.go:83] Found gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 in local docker daemon, skipping pull
I0223 19:39:35.457871    5279 cache.go:144] gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 exists in daemon, skipping load
I0223 19:39:35.457937    5279 cache.go:194] Successfully downloaded all kic artifacts
I0223 19:39:35.457981    5279 start.go:365] acquiring machines lock for minikube: {Name:mke11f63b5835bf422927bf558fccac7a21a838f Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0223 19:39:35.458043    5279 start.go:369] acquired machines lock for "minikube" in 48.583µs
I0223 19:39:35.458057    5279 start.go:96] Skipping create...Using existing machine configuration
I0223 19:39:35.458060    5279 fix.go:54] fixHost starting: 
I0223 19:39:35.458196    5279 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0223 19:39:35.510311    5279 fix.go:102] recreateIfNeeded on minikube: state=Running err=<nil>
W0223 19:39:35.510329    5279 fix.go:128] unexpected machine state, will restart: <nil>
I0223 19:39:35.511815    5279 out.go:177] 🏃  Updating the running docker "minikube" container ...
I0223 19:39:35.512685    5279 machine.go:88] provisioning docker machine ...
I0223 19:39:35.512719    5279 ubuntu.go:169] provisioning hostname "minikube"
I0223 19:39:35.512771    5279 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 19:39:35.560326    5279 main.go:141] libmachine: Using SSH client type: native
I0223 19:39:35.560523    5279 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 55775 <nil> <nil>}
I0223 19:39:35.560527    5279 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0223 19:39:35.678041    5279 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0223 19:39:35.678084    5279 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 19:39:35.756858    5279 main.go:141] libmachine: Using SSH client type: native
I0223 19:39:35.757044    5279 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 55775 <nil> <nil>}
I0223 19:39:35.757049    5279 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0223 19:39:35.853815    5279 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0223 19:39:35.853828    5279 ubuntu.go:175] set auth options {CertDir:/root/.minikube CaCertPath:/root/.minikube/certs/ca.pem CaPrivateKeyPath:/root/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/root/.minikube/machines/server.pem ServerKeyPath:/root/.minikube/machines/server-key.pem ClientKeyPath:/root/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/root/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/root/.minikube}
I0223 19:39:35.853844    5279 ubuntu.go:177] setting up certificates
I0223 19:39:35.853850    5279 provision.go:83] configureAuth start
I0223 19:39:35.853908    5279 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0223 19:39:35.920661    5279 provision.go:138] copyHostCerts
I0223 19:39:35.920694    5279 exec_runner.go:144] found /root/.minikube/ca.pem, removing ...
I0223 19:39:35.920702    5279 exec_runner.go:203] rm: /root/.minikube/ca.pem
I0223 19:39:35.920739    5279 exec_runner.go:151] cp: /root/.minikube/certs/ca.pem --> /root/.minikube/ca.pem (1074 bytes)
I0223 19:39:35.920782    5279 exec_runner.go:144] found /root/.minikube/cert.pem, removing ...
I0223 19:39:35.920784    5279 exec_runner.go:203] rm: /root/.minikube/cert.pem
I0223 19:39:35.920797    5279 exec_runner.go:151] cp: /root/.minikube/certs/cert.pem --> /root/.minikube/cert.pem (1115 bytes)
I0223 19:39:35.920815    5279 exec_runner.go:144] found /root/.minikube/key.pem, removing ...
I0223 19:39:35.920816    5279 exec_runner.go:203] rm: /root/.minikube/key.pem
I0223 19:39:35.920827    5279 exec_runner.go:151] cp: /root/.minikube/certs/key.pem --> /root/.minikube/key.pem (1675 bytes)
I0223 19:39:35.920842    5279 provision.go:112] generating server cert: /root/.minikube/machines/server.pem ca-key=/root/.minikube/certs/ca.pem private-key=/root/.minikube/certs/ca-key.pem org=root.minikube san=[192.168.49.2 127.0.0.1 localhost 127.0.0.1 minikube minikube]
I0223 19:39:36.108132    5279 provision.go:172] copyRemoteCerts
I0223 19:39:36.135846    5279 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0223 19:39:36.135892    5279 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 19:39:36.194613    5279 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55775 SSHKeyPath:/root/.minikube/machines/minikube/id_rsa Username:docker}
I0223 19:39:36.285432    5279 ssh_runner.go:362] scp /root/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1074 bytes)
I0223 19:39:36.296340    5279 ssh_runner.go:362] scp /root/.minikube/machines/server.pem --> /etc/docker/server.pem (1196 bytes)
I0223 19:39:36.306731    5279 ssh_runner.go:362] scp /root/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1675 bytes)
I0223 19:39:36.317998    5279 provision.go:86] duration metric: configureAuth took 464.139225ms
I0223 19:39:36.318010    5279 ubuntu.go:193] setting minikube options for container-runtime
I0223 19:39:36.318103    5279 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.28.3
I0223 19:39:36.318131    5279 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 19:39:36.382414    5279 main.go:141] libmachine: Using SSH client type: native
I0223 19:39:36.382585    5279 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 55775 <nil> <nil>}
I0223 19:39:36.382589    5279 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0223 19:39:36.483777    5279 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0223 19:39:36.483787    5279 ubuntu.go:71] root file system type: overlay
I0223 19:39:36.483845    5279 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I0223 19:39:36.483883    5279 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 19:39:36.588481    5279 main.go:141] libmachine: Using SSH client type: native
I0223 19:39:36.588658    5279 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 55775 <nil> <nil>}
I0223 19:39:36.588684    5279 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0223 19:39:36.708320    5279 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0223 19:39:36.708365    5279 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 19:39:36.749313    5279 main.go:141] libmachine: Using SSH client type: native
I0223 19:39:36.749512    5279 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x808a40] 0x80b720 <nil>  [] 0s} 127.0.0.1 55775 <nil> <nil>}
I0223 19:39:36.749519    5279 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0223 19:39:36.855894    5279 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0223 19:39:36.855906    5279 machine.go:91] provisioned docker machine in 1.343214917s
I0223 19:39:36.855911    5279 start.go:300] post-start starting for "minikube" (driver="docker")
I0223 19:39:36.855918    5279 start.go:329] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0223 19:39:36.880973    5279 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0223 19:39:36.881018    5279 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 19:39:37.011109    5279 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55775 SSHKeyPath:/root/.minikube/machines/minikube/id_rsa Username:docker}
I0223 19:39:37.095532    5279 ssh_runner.go:195] Run: cat /etc/os-release
I0223 19:39:37.097501    5279 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0223 19:39:37.097511    5279 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0223 19:39:37.097517    5279 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0223 19:39:37.097520    5279 info.go:137] Remote host: Ubuntu 22.04.3 LTS
I0223 19:39:37.097526    5279 filesync.go:126] Scanning /root/.minikube/addons for local assets ...
I0223 19:39:37.097555    5279 filesync.go:126] Scanning /root/.minikube/files for local assets ...
I0223 19:39:37.097561    5279 start.go:303] post-start completed in 241.646133ms
I0223 19:39:37.097569    5279 fix.go:56] fixHost completed within 1.639510077s
I0223 19:39:37.097572    5279 start.go:83] releasing machines lock for "minikube", held for 1.639524424s
I0223 19:39:37.097599    5279 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0223 19:39:37.202518    5279 ssh_runner.go:195] Run: cat /version.json
I0223 19:39:37.202544    5279 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 19:39:37.202582    5279 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0223 19:39:37.202621    5279 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 19:39:37.243479    5279 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55775 SSHKeyPath:/root/.minikube/machines/minikube/id_rsa Username:docker}
I0223 19:39:37.244473    5279 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55775 SSHKeyPath:/root/.minikube/machines/minikube/id_rsa Username:docker}
I0223 19:39:37.313245    5279 ssh_runner.go:195] Run: systemctl --version
I0223 19:39:37.497111    5279 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0223 19:39:37.538151    5279 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I0223 19:39:37.547037    5279 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I0223 19:39:37.572547    5279 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0223 19:39:37.577618    5279 cni.go:259] no active bridge cni configs found in "/etc/cni/net.d" - nothing to disable
I0223 19:39:37.577634    5279 start.go:472] detecting cgroup driver to use...
I0223 19:39:37.577652    5279 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0223 19:39:37.577711    5279 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0223 19:39:37.585611    5279 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I0223 19:39:37.590579    5279 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0223 19:39:37.595901    5279 containerd.go:145] configuring containerd to use "cgroupfs" as cgroup driver...
I0223 19:39:37.595932    5279 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I0223 19:39:37.601105    5279 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0223 19:39:37.605856    5279 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0223 19:39:37.610072    5279 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0223 19:39:37.614929    5279 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0223 19:39:37.619548    5279 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0223 19:39:37.648660    5279 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0223 19:39:37.677559    5279 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0223 19:39:37.706528    5279 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0223 19:39:37.808738    5279 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0223 19:39:37.902719    5279 start.go:472] detecting cgroup driver to use...
I0223 19:39:37.902751    5279 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0223 19:39:37.936642    5279 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0223 19:39:37.944308    5279 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0223 19:39:37.966559    5279 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0223 19:39:37.973140    5279 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0223 19:39:38.003393    5279 ssh_runner.go:195] Run: which cri-dockerd
I0223 19:39:38.031960    5279 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0223 19:39:38.036719    5279 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I0223 19:39:38.066737    5279 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0223 19:39:38.160071    5279 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0223 19:39:38.212714    5279 docker.go:560] configuring docker to use "cgroupfs" as cgroup driver...
I0223 19:39:38.212815    5279 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (130 bytes)
I0223 19:39:38.252478    5279 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0223 19:39:38.365705    5279 ssh_runner.go:195] Run: sudo systemctl restart docker
I0223 19:39:38.545391    5279 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0223 19:39:38.631771    5279 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0223 19:39:38.688151    5279 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0223 19:39:38.777737    5279 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0223 19:39:38.865341    5279 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0223 19:39:38.899769    5279 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0223 19:39:38.997844    5279 ssh_runner.go:195] Run: sudo systemctl restart cri-docker
I0223 19:39:39.035637    5279 start.go:519] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0223 19:39:39.035685    5279 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0223 19:39:39.037871    5279 start.go:540] Will wait 60s for crictl version
I0223 19:39:39.066170    5279 ssh_runner.go:195] Run: which crictl
I0223 19:39:39.164123    5279 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0223 19:39:39.192167    5279 start.go:556] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  24.0.7
RuntimeApiVersion:  v1
I0223 19:39:39.192218    5279 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0223 19:39:39.207009    5279 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0223 19:39:39.221003    5279 out.go:204] 🐳  Preparing Kubernetes v1.28.3 on Docker 24.0.7 ...
I0223 19:39:39.221227    5279 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0223 19:39:39.263852    5279 ssh_runner.go:195] Run: grep 192.168.49.1	host.minikube.internal$ /etc/hosts
I0223 19:39:39.266565    5279 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0223 19:39:39.308551    5279 preload.go:132] Checking if preload exists for k8s version v1.28.3 and runtime docker
I0223 19:39:39.308593    5279 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0223 19:39:39.320945    5279 docker.go:671] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.28.3
registry.k8s.io/kube-controller-manager:v1.28.3
registry.k8s.io/kube-scheduler:v1.28.3
registry.k8s.io/kube-proxy:v1.28.3
registry.k8s.io/etcd:3.5.9-0
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0223 19:39:39.320956    5279 docker.go:601] Images already preloaded, skipping extraction
I0223 19:39:39.320995    5279 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0223 19:39:39.332562    5279 docker.go:671] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.28.3
registry.k8s.io/kube-controller-manager:v1.28.3
registry.k8s.io/kube-scheduler:v1.28.3
registry.k8s.io/kube-proxy:v1.28.3
registry.k8s.io/etcd:3.5.9-0
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0223 19:39:39.332575    5279 cache_images.go:84] Images are preloaded, skipping loading
I0223 19:39:39.332612    5279 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0223 19:39:39.361485    5279 cni.go:84] Creating CNI manager for ""
I0223 19:39:39.361493    5279 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0223 19:39:39.361505    5279 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I0223 19:39:39.361512    5279 kubeadm.go:176] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.28.3 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0223 19:39:39.361721    5279 kubeadm.go:181] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.28.3
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0223 19:39:39.361766    5279 kubeadm.go:976] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.28.3/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I0223 19:39:39.385127    5279 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.28.3
I0223 19:39:39.390173    5279 binaries.go:44] Found k8s binaries, skipping transfer
I0223 19:39:39.410839    5279 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0223 19:39:39.415839    5279 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (369 bytes)
I0223 19:39:39.424383    5279 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0223 19:39:39.432315    5279 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2091 bytes)
I0223 19:39:39.440692    5279 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0223 19:39:39.442861    5279 certs.go:56] Setting up /root/.minikube/profiles/minikube for IP: 192.168.49.2
I0223 19:39:39.442873    5279 certs.go:190] acquiring lock for shared ca certs: {Name:mkb814c315fe9b7fabb439d6d58c5448fbb7853c Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0223 19:39:39.442951    5279 certs.go:199] skipping minikubeCA CA generation: /root/.minikube/ca.key
I0223 19:39:39.442963    5279 certs.go:199] skipping proxyClientCA CA generation: /root/.minikube/proxy-client-ca.key
I0223 19:39:39.443003    5279 certs.go:315] skipping minikube-user signed cert generation: /root/.minikube/profiles/minikube/client.key
I0223 19:39:39.443017    5279 certs.go:315] skipping minikube signed cert generation: /root/.minikube/profiles/minikube/apiserver.key.dd3b5fb2
I0223 19:39:39.443029    5279 certs.go:315] skipping aggregator signed cert generation: /root/.minikube/profiles/minikube/proxy-client.key
I0223 19:39:39.443067    5279 certs.go:437] found cert: /root/.minikube/certs/root/.minikube/certs/ca-key.pem (1679 bytes)
I0223 19:39:39.443076    5279 certs.go:437] found cert: /root/.minikube/certs/root/.minikube/certs/ca.pem (1074 bytes)
I0223 19:39:39.443083    5279 certs.go:437] found cert: /root/.minikube/certs/root/.minikube/certs/cert.pem (1115 bytes)
I0223 19:39:39.443089    5279 certs.go:437] found cert: /root/.minikube/certs/root/.minikube/certs/key.pem (1675 bytes)
I0223 19:39:39.443362    5279 ssh_runner.go:362] scp /root/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I0223 19:39:39.454340    5279 ssh_runner.go:362] scp /root/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1675 bytes)
I0223 19:39:39.464810    5279 ssh_runner.go:362] scp /root/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0223 19:39:39.477810    5279 ssh_runner.go:362] scp /root/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0223 19:39:39.492788    5279 ssh_runner.go:362] scp /root/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0223 19:39:39.510627    5279 ssh_runner.go:362] scp /root/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1675 bytes)
I0223 19:39:39.524447    5279 ssh_runner.go:362] scp /root/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0223 19:39:39.536742    5279 ssh_runner.go:362] scp /root/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I0223 19:39:39.552301    5279 ssh_runner.go:362] scp /root/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0223 19:39:39.565318    5279 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0223 19:39:39.576029    5279 ssh_runner.go:195] Run: openssl version
I0223 19:39:39.612281    5279 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0223 19:39:39.621105    5279 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0223 19:39:39.624514    5279 certs.go:480] hashing: -rw-r--r-- 1 root root 1111 Feb 23 23:16 /usr/share/ca-certificates/minikubeCA.pem
I0223 19:39:39.624554    5279 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0223 19:39:39.659111    5279 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0223 19:39:39.667626    5279 ssh_runner.go:195] Run: ls /var/lib/minikube/certs/etcd
I0223 19:39:39.672268    5279 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-etcd-client.crt -checkend 86400
I0223 19:39:39.680055    5279 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-kubelet-client.crt -checkend 86400
I0223 19:39:39.687620    5279 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/server.crt -checkend 86400
I0223 19:39:39.693262    5279 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/healthcheck-client.crt -checkend 86400
I0223 19:39:39.698680    5279 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/peer.crt -checkend 86400
I0223 19:39:39.703829    5279 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/front-proxy-client.crt -checkend 86400
I0223 19:39:39.710232    5279 kubeadm.go:404] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:6000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/root:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0223 19:39:39.710374    5279 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0223 19:39:39.766525    5279 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0223 19:39:39.812347    5279 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0223 19:39:39.820019    5279 kubeadm.go:226] ignoring SystemVerification for kubeadm because of docker driver
I0223 19:39:39.860690    5279 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0223 19:39:39.867873    5279 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0223 19:39:39.867930    5279 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0223 19:39:39.907168    5279 kubeadm.go:322] [init] Using Kubernetes version: v1.28.3
I0223 19:39:39.907203    5279 kubeadm.go:322] [preflight] Running pre-flight checks
I0223 19:39:40.006231    5279 kubeadm.go:322] [preflight] Pulling images required for setting up a Kubernetes cluster
I0223 19:39:40.006281    5279 kubeadm.go:322] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0223 19:39:40.006321    5279 kubeadm.go:322] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I0223 19:39:40.190856    5279 kubeadm.go:322] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0223 19:39:40.192150    5279 out.go:204]     ▪ Generating certificates and keys ...
I0223 19:39:40.192313    5279 kubeadm.go:322] [certs] Using existing ca certificate authority
I0223 19:39:40.192343    5279 kubeadm.go:322] [certs] Using existing apiserver certificate and key on disk
I0223 19:39:40.193537    5279 kubeadm.go:322] 	[WARNING Swap]: swap is enabled; production deployments should disable swap unless testing the NodeSwap feature gate of the kubelet
I0223 19:39:40.193586    5279 kubeadm.go:322] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0223 19:39:40.193635    5279 kubeadm.go:322] 	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
I0223 19:39:40.193772    5279 kubeadm.go:322] error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
I0223 19:39:40.193802    5279 kubeadm.go:322] To see the stack trace of this error execute with --v=5 or higher
W0223 19:39:40.193877    5279 out.go:239] 💢  initialization failed, will try again: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.28.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
	[WARNING Swap]: swap is enabled; production deployments should disable swap unless testing the NodeSwap feature gate of the kubelet
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher

I0223 19:39:40.193965    5279 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force"
I0223 19:39:42.485047    5279 ssh_runner.go:235] Completed: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force": (2.291066262s)
I0223 19:39:42.502890    5279 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I0223 19:39:42.508963    5279 kubeadm.go:226] ignoring SystemVerification for kubeadm because of docker driver
I0223 19:39:42.526315    5279 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0223 19:39:42.531132    5279 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0223 19:39:42.531153    5279 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0223 19:39:42.578520    5279 kubeadm.go:322] 	[WARNING Swap]: swap is enabled; production deployments should disable swap unless testing the NodeSwap feature gate of the kubelet
I0223 19:39:42.618141    5279 kubeadm.go:322] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0223 19:39:42.618187    5279 kubeadm.go:322] 	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
I0223 19:39:42.777812    5279 kubeadm.go:322] error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
I0223 19:39:42.808875    5279 out.go:204]     ▪ Generating certificates and keys ...
I0223 19:39:42.808981    5279 kubeadm.go:322] To see the stack trace of this error execute with --v=5 or higher
I0223 19:39:42.809003    5279 kubeadm.go:322] [init] Using Kubernetes version: v1.28.3
I0223 19:39:42.809023    5279 kubeadm.go:322] [preflight] Running pre-flight checks
I0223 19:39:42.809056    5279 kubeadm.go:322] [preflight] Pulling images required for setting up a Kubernetes cluster
I0223 19:39:42.809126    5279 kubeadm.go:322] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0223 19:39:42.809182    5279 kubeadm.go:322] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I0223 19:39:42.809210    5279 kubeadm.go:322] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0223 19:39:42.809232    5279 kubeadm.go:322] [certs] Using existing ca certificate authority
I0223 19:39:42.809288    5279 kubeadm.go:406] StartCluster complete in 3.099075804s
I0223 19:39:42.809320    5279 kubeadm.go:322] [certs] Using existing apiserver certificate and key on disk
I0223 19:39:42.809320    5279 cri.go:54] listing CRI containers in root : {State:all Name:kube-apiserver Namespaces:[]}
I0223 19:39:42.827027    5279 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-apiserver
I0223 19:39:42.854089    5279 cri.go:89] found id: ""
I0223 19:39:42.854101    5279 logs.go:284] 0 containers: []
W0223 19:39:42.854104    5279 logs.go:286] No container was found matching "kube-apiserver"
I0223 19:39:42.854107    5279 cri.go:54] listing CRI containers in root : {State:all Name:etcd Namespaces:[]}
I0223 19:39:42.880442    5279 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=etcd
I0223 19:39:42.908506    5279 cri.go:89] found id: ""
I0223 19:39:42.908520    5279 logs.go:284] 0 containers: []
W0223 19:39:42.908524    5279 logs.go:286] No container was found matching "etcd"
I0223 19:39:42.908529    5279 cri.go:54] listing CRI containers in root : {State:all Name:coredns Namespaces:[]}
I0223 19:39:42.929737    5279 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=coredns
I0223 19:39:42.958459    5279 cri.go:89] found id: ""
I0223 19:39:42.958474    5279 logs.go:284] 0 containers: []
W0223 19:39:42.958485    5279 logs.go:286] No container was found matching "coredns"
I0223 19:39:42.958489    5279 cri.go:54] listing CRI containers in root : {State:all Name:kube-scheduler Namespaces:[]}
I0223 19:39:42.977034    5279 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-scheduler
I0223 19:39:43.003847    5279 cri.go:89] found id: ""
I0223 19:39:43.003857    5279 logs.go:284] 0 containers: []
W0223 19:39:43.003865    5279 logs.go:286] No container was found matching "kube-scheduler"
I0223 19:39:43.003868    5279 cri.go:54] listing CRI containers in root : {State:all Name:kube-proxy Namespaces:[]}
I0223 19:39:43.035286    5279 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-proxy
I0223 19:39:43.077030    5279 cri.go:89] found id: ""
I0223 19:39:43.077043    5279 logs.go:284] 0 containers: []
W0223 19:39:43.077047    5279 logs.go:286] No container was found matching "kube-proxy"
I0223 19:39:43.077051    5279 cri.go:54] listing CRI containers in root : {State:all Name:kube-controller-manager Namespaces:[]}
I0223 19:39:43.102226    5279 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-controller-manager
I0223 19:39:43.136279    5279 cri.go:89] found id: ""
I0223 19:39:43.136303    5279 logs.go:284] 0 containers: []
W0223 19:39:43.136308    5279 logs.go:286] No container was found matching "kube-controller-manager"
I0223 19:39:43.136312    5279 cri.go:54] listing CRI containers in root : {State:all Name:kindnet Namespaces:[]}
I0223 19:39:43.163765    5279 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kindnet
I0223 19:39:43.196687    5279 cri.go:89] found id: ""
I0223 19:39:43.196701    5279 logs.go:284] 0 containers: []
W0223 19:39:43.196706    5279 logs.go:286] No container was found matching "kindnet"
I0223 19:39:43.196713    5279 logs.go:123] Gathering logs for dmesg ...
I0223 19:39:43.196722    5279 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0223 19:39:43.205929    5279 logs.go:123] Gathering logs for describe nodes ...
I0223 19:39:43.205947    5279 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
W0223 19:39:43.245651    5279 logs.go:130] failed describe nodes: command: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig" /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig": Process exited with status 1
stdout:

stderr:
E0224 00:39:43.240142   12511 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E0224 00:39:43.240342   12511 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E0224 00:39:43.241668   12511 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E0224 00:39:43.241796   12511 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E0224 00:39:43.243251   12511 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
The connection to the server localhost:8443 was refused - did you specify the right host or port?
 output: 
** stderr ** 
E0224 00:39:43.240142   12511 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E0224 00:39:43.240342   12511 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E0224 00:39:43.241668   12511 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E0224 00:39:43.241796   12511 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
E0224 00:39:43.243251   12511 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused
The connection to the server localhost:8443 was refused - did you specify the right host or port?

** /stderr **
I0223 19:39:43.245659    5279 logs.go:123] Gathering logs for Docker ...
I0223 19:39:43.245666    5279 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0223 19:39:43.268523    5279 logs.go:123] Gathering logs for container status ...
I0223 19:39:43.268551    5279 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0223 19:39:43.296961    5279 logs.go:123] Gathering logs for kubelet ...
I0223 19:39:43.296976    5279 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
W0223 19:39:43.303180    5279 out.go:369] Error starting cluster: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.28.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
	[WARNING Swap]: swap is enabled; production deployments should disable swap unless testing the NodeSwap feature gate of the kubelet
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher
W0223 19:39:43.303210    5279 out.go:239] 
W0223 19:39:43.303338    5279 out.go:239] 💣  Error starting cluster: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.28.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
	[WARNING Swap]: swap is enabled; production deployments should disable swap unless testing the NodeSwap feature gate of the kubelet
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher

W0223 19:39:43.303360    5279 out.go:239] 
W0223 19:39:43.303813    5279 out.go:239] [31m╭───────────────────────────────────────────────────────────────────────────────────────────╮[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    😿  If the above advice does not help, please let us know:                             [31m│[0m
[31m│[0m    👉  https://github.com/kubernetes/minikube/issues/new/choose                           [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m╰───────────────────────────────────────────────────────────────────────────────────────────╯[0m
I0223 19:39:43.306035    5279 out.go:177] 
W0223 19:39:43.306852    5279 out.go:239] ❌  Exiting due to GUEST_START: failed to start node: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.28.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
	[WARNING Swap]: swap is enabled; production deployments should disable swap unless testing the NodeSwap feature gate of the kubelet
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher

W0223 19:39:43.306885    5279 out.go:239] 
W0223 19:39:43.307417    5279 out.go:239] [31m╭───────────────────────────────────────────────────────────────────────────────────────────╮[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    😿  If the above advice does not help, please let us know:                             [31m│[0m
[31m│[0m    👉  https://github.com/kubernetes/minikube/issues/new/choose                           [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m╰───────────────────────────────────────────────────────────────────────────────────────────╯[0m
I0223 19:39:43.309021    5279 out.go:177] 

* 
* ==> Docker <==
* Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"format\\\"\". Proceed without further sandbox information."
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"format\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Failed to delete corrupt checkpoint for sandbox format\": invalid key: \"format\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"format\\\"\". Proceed without further sandbox information."
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"format\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Failed to delete corrupt checkpoint for sandbox format\": invalid key: \"format\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"format\\\"\". Proceed without further sandbox information."
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"format\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Feb 24 00:39:42 minikube cri-dockerd[9362]: time="2024-02-24T00:39:42Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""

* 
* ==> container status <==
* CONTAINER           IMAGE               CREATED             STATE               NAME                ATTEMPT             POD ID              POD

* 
* ==> describe nodes <==
* 
* ==> dmesg <==
* [  +0.000341] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.194542] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.000016] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.004389] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.138023] kmem.limit_in_bytes is deprecated and will be removed. Please report your usecase to linux-mm@kvack.org if you depend on this functionality.
[Feb23 22:23] 9pnet_virtio: no channels available for device drvfsa
[  +0.000402] WSL (1) WARNING: mount: waiting for virtio device drvfsa
[  +0.110376] 9pnet_virtio: no channels available for device drvfsa
[  +0.000195] WSL (1) WARNING: mount: waiting for virtio device drvfsa
[Feb24 00:01] overlayfs: upperdir is in-use as upperdir/workdir of another mount, accessing files from both mounts will result in undefined behavior.
[  +0.000004] overlayfs: workdir is in-use as upperdir/workdir of another mount, accessing files from both mounts will result in undefined behavior.
[  +0.260542] overlayfs: upperdir is in-use as upperdir/workdir of another mount, accessing files from both mounts will result in undefined behavior.
[  +0.000004] overlayfs: workdir is in-use as upperdir/workdir of another mount, accessing files from both mounts will result in undefined behavior.
[  +0.280490] overlayfs: upperdir is in-use as upperdir/workdir of another mount, accessing files from both mounts will result in undefined behavior.
[  +0.000003] overlayfs: workdir is in-use as upperdir/workdir of another mount, accessing files from both mounts will result in undefined behavior.
[Feb24 00:08] overlayfs: upperdir is in-use as upperdir/workdir of another mount, accessing files from both mounts will result in undefined behavior.
[  +0.000004] overlayfs: workdir is in-use as upperdir/workdir of another mount, accessing files from both mounts will result in undefined behavior.
[  +0.199483] overlayfs: upperdir is in-use as upperdir/workdir of another mount, accessing files from both mounts will result in undefined behavior.
[  +0.000003] overlayfs: workdir is in-use as upperdir/workdir of another mount, accessing files from both mounts will result in undefined behavior.
[  +0.094966] overlayfs: upperdir is in-use as upperdir/workdir of another mount, accessing files from both mounts will result in undefined behavior.
[  +0.000003] overlayfs: workdir is in-use as upperdir/workdir of another mount, accessing files from both mounts will result in undefined behavior.
[  +0.199254] overlayfs: upperdir is in-use as upperdir/workdir of another mount, accessing files from both mounts will result in undefined behavior.
[  +0.000003] overlayfs: workdir is in-use as upperdir/workdir of another mount, accessing files from both mounts will result in undefined behavior.
[Feb24 00:12] /sbin/ldconfig: 
[  +0.000003] /usr/lib/wsl/lib/libcuda.so.1 is not a symbolic link

[  +0.014968] 9pnet_virtio: no channels available for device drvfs
[  +0.000375] WSL (1) WARNING: mount: waiting for virtio device drvfs
[  +0.191440] /sbin/ldconfig.real: 
[  +0.000003] /usr/lib/wsl/lib/libcuda.so.1 is not a symbolic link

[  +0.022460] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000299] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000207] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000284] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.010034] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.055084] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.000476] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.000441] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.000312] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.000308] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.000309] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.000353] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.000335] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.000344] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.000307] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.000372] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.000374] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.000387] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.000345] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.026433] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.027000] 9pnet_virtio: no channels available for device drvfs
[  +0.000479] WSL (2) WARNING: mount: waiting for virtio device drvfs
[  +0.225172] new mount options do not match the existing superblock, will be ignored
[  +0.128131] systemd-journald[40]: File /var/log/journal/67cecf491eda467ea9b19ae425b35a70/system.journal corrupted or uncleanly shut down, renaming and replacing.
[ +15.624388] Exception: 
[  +0.000003] Operation canceled @p9io.cpp:258 (AcceptAsync)

[Feb24 00:32] overlayfs: upperdir is in-use as upperdir/workdir of another mount, accessing files from both mounts will result in undefined behavior.
[  +0.000003] overlayfs: workdir is in-use as upperdir/workdir of another mount, accessing files from both mounts will result in undefined behavior.

* 
* ==> kernel <==
*  00:40:48 up  7:47,  0 users,  load average: 0.24, 0.30, 0.24
Linux minikube 5.15.133.1-microsoft-standard-WSL2 #1 SMP Thu Oct 5 21:02:42 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.3 LTS"

* 
* ==> kubelet <==
* -- No entries --

